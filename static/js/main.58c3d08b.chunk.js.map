{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","input","handleChange","bind","event","this","setState","target","value","className","id","onChange","dangerouslySetInnerHTML","__html","marked","breaks","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RA6EeA,G,uDApCb,WAAYC,GACX,IAAD,8BACE,cAAMA,IACDC,MACL,CACEC,MAzCW,i6BA2Cb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANtB,E,yDASaC,GAEXC,KAAKC,SAAS,CACZL,MAAQG,EAAMG,OAAOC,U,+BAMvB,OACE,8BACE,sBAAKC,UAAU,wBAAf,UACA,0BAAUA,UAAU,eAAeD,MAAOH,KAAKL,MAAMC,MAAOS,GAAG,SAASC,SAAUN,KAAKH,eACrF,qBAAKO,UAAU,yBAAf,SACA,qBAAKC,GAAG,UACJE,wBAAyB,CACrBC,OAAQC,IAAOT,KAAKL,MAAMC,MAAO,CAACc,QAAO,kB,GA5BzCC,IAAMC,YC3BTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.58c3d08b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport marked from 'marked';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nconst placeholder = `# Welcome to Markdown Previewer!\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n![React Logo](https://nagarsoftwaresolution.com/wp-content/uploads/2020/02/icons8-react-native-256.png)\n`;\nclass App extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state = \n    {\n      input: placeholder,\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event)\n  {\n    this.setState({\n      input : event.target.value,\n    })\n  }\n\n  render()\n  {\n    return (\n      <div>\n        <div className=\"row App vh-100 vw-100\">\n        <textarea className=\"col bg-light\" value={this.state.input} id=\"editor\" onChange={this.handleChange}/>\n          <div className=\"col bg-dark text-white\"> \n          <div id=\"preview\"\n              dangerouslySetInnerHTML={{\n                  __html: marked(this.state.input, {breaks:true})\n              }}\n          />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}